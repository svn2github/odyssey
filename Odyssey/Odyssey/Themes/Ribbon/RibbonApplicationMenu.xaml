<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:odc="clr-namespace:Odyssey.Controls"
    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"                    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/InternalRibbonButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/DefaultRibbonButtonBrushes.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/RibbonAppMenuItem.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/RibbonApplicationButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate TargetType="{x:Type odc:RibbonApplicationMenu}" x:Key="RibbonApplicationMenuControlTemplate">
        <Grid Margin="0">
            <odc:RibbonToggleButton x:Name="PART_AppButton" SnapsToDevicePixels="True"
                                                  ClickMode="Release"
                                                 IsFlat="False" Width="37" Height="37"
                                                 IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                Template="{DynamicResource {ComponentResourceKey odc:Skins, ApplicationMenuButtonTemplate}}"
                                                Foreground="White"
                                                odc:RibbonBar.Size="Medium" 
                                                SmallImage="{TemplateBinding MenuButtonImage}"
                                                CornerRadius="0,5,0,0"
                                                Background="{DynamicResource {ComponentResourceKey odc:Skins, RibbonMenuButtonBrush}}">
                <Image Width="24" Height="24" Source="{TemplateBinding MenuButtonImage}"/>
            </odc:RibbonToggleButton>
            <Popup  VerticalOffset="-21"   Focusable="False"
                               StaysOpen="False"  x:Name="PART_AppMenuPopup"
                               PopupAnimation="Fade" Placement="Bottom" AllowsTransparency="True">
                <mwt:SystemDropShadowChrome Margin="0,0,5,5"  Color="#81000000" Name="Shdw2" CornerRadius="4"  Focusable="False">
                    <Grid Focusable="False">
                        <Border Background="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBarControlBrush}}" BorderBrush="{DynamicResource {ComponentResourceKey odc:Skins, BorderBrush}}" Focusable="False" 
                                    Padding="5"  BorderThickness="1" CornerRadius="0,4,4,4">
                            <StackPanel Focusable="False">
                                <Border BorderBrush="White" BorderThickness="1" Focusable="False">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    Width="480"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid Margin="-1,0,-1,0" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Border BorderThickness="0,0,1,0" BorderBrush="Gray" Grid.Row="0" Grid.Column="0">
                                                <ItemsPresenter/>
                                            </Border>
                                            <StackPanel Grid.Column="1" Grid.Row="0" x:Name="PART_RecentItemsList">
                                                <ContentPresenter HorizontalAlignment="Stretch" Content="{TemplateBinding MenuHeader}" ContentTemplate="{TemplateBinding MenuHeaderTemplate}"/>
                                                <ContentControl Content="{TemplateBinding RecentItemsList}" 
                                                            ContentTemplate="{TemplateBinding RecentItemsListTemplate}" 
                                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                                <ContentPresenter HorizontalAlignment="Stretch" Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}"/>
                                            </StackPanel>

                                        </Grid>
                                    </Border>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Footer}" ContentTemplate="{TemplateBinding FooterTemplate}"/>
                            </StackPanel>
                        </Border>

                        <!--Adding a second ApplicationMenu inside the popup to make the visual effect, that the menu button appears before the popup,
                        which is truly done using 2 separate buttons:-->
                        <Border Margin="4.5,-21,0,0">
                            <odc:RibbonToggleButton  x:Name="PART_AppButtonClone" SnapsToDevicePixels="True"
                                                 IsFlat="False" Width="37" Height="37" ClickMode="Release" VerticalAlignment="Top" HorizontalAlignment="Left"
                                                 IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                Template="{DynamicResource {ComponentResourceKey odc:Skins, ApplicationMenuButtonTemplate}}"
                                                Foreground="White"
                                                odc:RibbonBar.Size="Medium" 
                                                SmallImage="{TemplateBinding MenuButtonImage}"
                                                CornerRadius="0,5,0,0"
                                                Background="{DynamicResource {ComponentResourceKey odc:Skins, RibbonMenuButtonBrush}}">
                                <Image Width="24" Height="24" Source="{TemplateBinding MenuButtonImage}"/>
                            </odc:RibbonToggleButton>
                        </Border>

                    </Grid>
                </mwt:SystemDropShadowChrome>
            </Popup>
        </Grid>


        <ControlTemplate.Resources>
            <Style TargetType="{x:Type odc:RibbonChrome}" BasedOn="{StaticResource RibbonChromeStyle}"/>
        </ControlTemplate.Resources>

    </ControlTemplate>

    <Style TargetType="{x:Type odc:RibbonApplicationMenu}">
        <Setter Property="Width" Value="48"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{StaticResource RibbonApplicationMenuControlTemplate}"/>
        <Setter Property="MenuHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="0,0,0,1" BorderBrush="Gray"  Margin="1"   
                            Background="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBarControlBrush}}"
                            VerticalAlignment="Top" HorizontalAlignment="Stretch" >
                        <TextBlock Text="Recent Documents" FontWeight="Bold" TextAlignment="Center"
                                   Foreground="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBarForgroundBrush}}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>