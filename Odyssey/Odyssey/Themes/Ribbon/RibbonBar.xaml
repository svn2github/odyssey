<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:odc="clr-namespace:Odyssey.Controls"
    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"                    
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/InternalRibbonButton.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Odyssey;Component/Themes/Ribbon/DefaultRibbonButtonBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <VerticalAlignment x:Key="{ComponentResourceKey odc:Skins, ApplicationMenuButtonVAlign}">Center</VerticalAlignment>
    <HorizontalAlignment x:Key="{ComponentResourceKey odc:Skins, ApplicationMenuButtonHAlign}">Center</HorizontalAlignment>

    <ControlTemplate TargetType="{x:Type odc:RibbonBar}" x:Key="RibbonBarTemplate">
        <Border Background="{TemplateBinding Background}" x:Name="border" Focusable="False"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid VerticalAlignment="Top" Margin="{TemplateBinding Padding}" x:Name="outergrid" Focusable="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.RowSpan="2" Grid.ColumnSpan="2" Grid.Row="1" Margin="0,2,0,0" 
                        Background="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBackgroundBrush}}"/>
                
                <!--Note: using a ContentControl instead of a ContentPresenter enables binding:-->
                <ContentControl Grid.RowSpan="2" Grid.Column="0" Content="{TemplateBinding ApplicationMenu}" Focusable="False"
                                  HorizontalAlignment="{DynamicResource {ComponentResourceKey odc:Skins, ApplicationMenuButtonHAlign}}"
                                  VerticalAlignment="{DynamicResource {ComponentResourceKey odc:Skins, ApplicationMenuButtonVAlign}}" />

                <odc:RibbonTabScroller x:Name="TabScroller"  Padding="4,1,4,1"  SnapsToDevicePixels="True" Focusable="False"
                                         Grid.Row="2" Grid.ColumnSpan="2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}}"
                                         Alignment="{Binding GroupAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                    <ItemsControl  Height="100" x:Name="PART_GroupPanel" Focusable="False" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True" Focusable="False"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </odc:RibbonTabScroller>


                <Grid x:Name="grid" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" 
                      Focusable="False"
                      VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,0,94,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24"/>
                    </Grid.RowDefinitions>
                    <TextBlock IsHitTestVisible="False" Margin="4,0,4,0" Grid.Column="1" x:Name="WindowTitle" Focusable="False"
                                       TextBlock.Foreground="{Binding Path=WindowTitleBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=odc:RibbonWindow}}"                                     
                                     TextAlignment="Left" 
                                      Text="{TemplateBinding Title}" HorizontalAlignment="Left" VerticalAlignment="Center"  TextTrimming="CharacterEllipsis"
                                      TextBlock.FontWeight="Bold"/>
                    <odc:RibbonTabItemPanel x:Name="PART_TabItemContainer"  Grid.IsSharedSizeScope="True" IsHitTestVisible="True" 
                                          Margin="3,0,0,-1" Grid.Row="1" Grid.ColumnSpan="3" Focusable="False"
                                          SeparatorBrush="{DynamicResource {ComponentResourceKey odc:Skins, RibbonTabSeparatorBrush}}"                                                                         
                                          Height="24" Panel.ZIndex="2" TextBlock.Foreground="{DynamicResource {ComponentResourceKey odc:Skins, RibbonForegroundBrush}}" 
                                          HorizontalAlignment="Left"  VerticalAlignment="Bottom"/>

                    <!--Note: using a ContentControl instead of a ContentPresenter enables binding:-->
                    <ContentControl Content="{TemplateBinding ContextualTabSet}"  Grid.IsSharedSizeScope="True" Margin="0,1,0,0"
                                    Focusable="False"
                                      VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Column="2" Grid.RowSpan="3" />
                    <ContentControl  HorizontalAlignment="Left" x:Name="topQaPresenter" Margin="0,-2,0,0" Focusable="False"  />
                </Grid>

                <StackPanel Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="bottomBorder" Visibility="Collapsed" Focusable="False">
                    <Border Height="1" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {ComponentResourceKey odc:Skins, BorderBrush}}"/>
                    <Border Height="1" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {ComponentResourceKey odc:Skins, LightBorderBrush}}"/>
                    
                    <Popup IsOpen="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent},  Mode=OneWay}" 
                    PopupAnimation="Fade"   Focusable="False"  StaysOpen="True" VerticalOffset="-2"
                  Placement="Bottom" x:Name="PART_Popup"  AllowsTransparency="True">
                        <mwt:SystemDropShadowChrome Margin="0,0,5,5"  Color="#41000000" Name="Shdw" 
                                            Width="{TemplateBinding FrameworkElement.ActualWidth}"  CornerRadius="4"  >
                            <Border Width="{Binding ActualWidth, ElementName=bottomBorder}" Background="Transparent" Focusable="False" >
                                <odc:RibbonTabScroller Padding="4,1,4,1" Grid.Row="1" Panel.ZIndex="-1" 
                                                 Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}}"
                                                 CanAnimate="False"
                                                 Alignment="{Binding GroupAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <ItemsControl  Height="100" x:Name="PART_PopupGroupPanel">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </odc:RibbonTabScroller>
                            </Border>
                        </mwt:SystemDropShadowChrome>
                    </Popup>
                </StackPanel>


                <!--Note: using a ContentControl instead of a ContentPresenter enables binding:-->
                <ContentControl Grid.Row="3" Grid.ColumnSpan="2"  HorizontalAlignment="Stretch" x:Name="bottmQaPresenter" Visibility="Collapsed" Focusable="False" />

            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="CanMinimize" Value="False">
                <Setter Property="ItemsSource" Value="{Binding SelectedGroups, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_GroupPanel"/>
            </Trigger>
            <Trigger Property="CanMinimize" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="bottomBorder"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="TabScroller"/>
                <Setter Property="ItemsSource" Value="{Binding SelectedGroups, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_PopupGroupPanel"/>
            </Trigger>
            <Trigger Property="ContextualTabSet" Value="{x:Null}">
                <Setter Property="Margin" Value="0" TargetName="grid"/>
                
                <!--Add a right margin to the Titlebar text when no ContextualTab is visible to ensure that it won't overlap with the Windows Buttons on the right:-->
                <Setter Property="Margin" Value="4,0,105,0" TargetName="WindowTitle"/>
                <Setter Property="HorizontalAlignment" Value="Stretch" TargetName="grid"/>
            </Trigger>
            <Trigger Property="ToolbarPlacement" Value="Bottom">
                <Setter TargetName="topQaPresenter" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="bottmQaPresenter" Property="Visibility" Value="Visible"/>
                <Setter TargetName="bottmQaPresenter" Property="Content" Value="{Binding QAToolBar, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="ToolbarPlacement" Value="Top">
                <Setter TargetName="topQaPresenter" Property="Content" Value="{Binding QAToolBar, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsRibbonVisible" Value="False">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_TabItemContainer"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="TabScroller"/>
            </Trigger>
            <Trigger Property="IsMinimized" Value="True">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_TabItemContainer"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="topQaPresenter"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="TabScroller"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="bottmQaPresenter"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsGlassOn, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=odc:RibbonWindow}}" Value="True">
                <Setter Property="Effect" TargetName="WindowTitle">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Color="White"  ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=odc:RibbonWindow}}" Value="Maximized">
                <Setter Property="Effect" TargetName="WindowTitle" Value="{x:Null}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsGlassOn, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=odc:RibbonWindow}}" Value="False">
                <Setter Property="Foreground" TargetName="WindowTitle" Value="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBarForgroundBrush}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type odc:RibbonBar}">
        <!--<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey odc:Skins, RibbonBarControlBrush}}"/>-->
        <Setter Property="Template" Value="{StaticResource RibbonBarTemplate}"/>
        <Setter Property="Foreground" Value="{DynamicResource {ComponentResourceKey odc:Skins, RibbonForegroundBrush}}"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

</ResourceDictionary>