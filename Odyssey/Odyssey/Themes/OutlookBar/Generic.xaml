<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:local="clr-namespace:Odyssey.Controls"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <BooleanToVisibilityConverter x:Key="visibleConverter"/>


    <Style TargetType="{x:Type local:OdcExpander}" x:Key="odcHeader">
        <Setter Property="CanAnimate" Value="True"/>
        <Setter Property="HeaderBackground" Value="{DynamicResource LightBackgroundBrush}"/>
        <Setter Property="MouseOverHeaderBackground" Value="{DynamicResource HighlightedExpanderHeaderBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="ShowEllipse" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HeaderBorderThickness" Value="0,1,0,1"/>
        <Setter Property="Margin" Value="0"/>
    </Style>


    <Style TargetType="{x:Type ButtonBase }" x:Key="buttonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Focusable="False"
                            x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BorderBrush}" >
                        <ContentPresenter Focusable="False" 
                                        Content="{TemplateBinding Content}"  ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightButtonGradientBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectedButtonGradientBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="verticalButtonStyle" BasedOn="{StaticResource buttonStyle}">
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="-90"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"     
                            Focusable="False"
                            x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BorderBrush}" >
                        <Border Background="Transparent" BorderBrush="White" BorderThickness="0,1,1,0">
                            <ContentPresenter Focusable="False"  Margin="4,0,4,0"
                                        Content="{TemplateBinding Content}"  ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightButtonSolidBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectedButtonSolidBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="verticalToggleButtonStyle" BasedOn="{StaticResource buttonStyle}">
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="-90"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"     
                            Focusable="False"
                            x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BorderBrush}" >
                        <Border Background="Transparent" BorderBrush="White" BorderThickness="0,1,1,0">
                            <ContentPresenter Focusable="False"  Margin="4,0,4,0"
                                        Content="{TemplateBinding Content}"  ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightButtonSolidBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectedButtonSolidBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectedButtonSolidBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton }" x:Key="buttonInSection">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Background" Value="{DynamicResource SectionButtonGradientBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                            Focusable="False"
                            x:Name="border"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource BorderBrush}" >
                        <ContentControl Focusable="False" Background="{TemplateBinding Background}" Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightButtonGradientBrush}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SelectedButtonGradientBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:OutlookBar}" x:Key="OutlookBar">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource LightBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:OutlookBar}">
                    <DockPanel>
                        <Button x:Name="resizeButton" Width="4" DockPanel.Dock="Right" 
                                Visibility="{Binding CanResize,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource visibleConverter}}"
                                Cursor="SizeWE"
                                ClickMode="Press" Command="local:OutlookBar.ResizeCommand">
                            <Button.Template>
                                <ControlTemplate>
                                    <Border Background="Transparent"/>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Border Background="{TemplateBinding Background}" Focusable="False"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel Background="White" Focusable="False">
                                <Border Height="24" DockPanel.Dock="Top" BorderThickness="0,0,0,1" 
                                    Focusable="False" TextBlock.Foreground="{DynamicResource ForegroundBrush}"
                                    Background="{DynamicResource OutlookbarHeaderBrush}" BorderBrush="{DynamicResource BorderBrush}">
                                    <DockPanel>
                                        <Button x:Name="closeButton"
                                            DockPanel.Dock="Right" Command="local:OutlookBar.CloseCommand"
                                            Visibility="{Binding IsCloseButtonVisible, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource visibleConverter}}"
                                                Style="{StaticResource buttonStyle}" Width="18" Height="18"  Margin="2">
                                            <Button.Content>
                                                <Path  Stroke="{DynamicResource ImageBrush}" Fill="Transparent"  
                                                  Data="M0,0 L6,6 M6,0 L0,6"/>
                                            </Button.Content>
                                        </Button>
                                        <Button x:Name="toggleMinimizeButton"
                                            DockPanel.Dock="Right" Command="local:OutlookBar.CollapseCommand" 
                                                Style="{StaticResource buttonStyle}" Width="18" Height="18"  Margin="2">
                                            <Button.Content>
                                                <Path x:Name="expandPath" Stroke="{DynamicResource ImageBrush}" Fill="Transparent"  
                                                  Data="M0,0 L3,3 0,6 M3,0 L6,3 3,6"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock x:Name="headerText" Text="{Binding Path=SelectedSection.Header, RelativeSource={RelativeSource TemplatedParent}}" 
                                               TextBlock.FontSize="14"
                                               Margin="4,0,4,0"
                                           VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.FontWeight="Bold"/>
                                    </DockPanel>
                                </Border>
                                <StackPanel DockPanel.Dock="Bottom" Focusable="False" 
                                        Visibility="{Binding ShowButtons, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource visibleConverter}}" >
                                    <Button x:Name="splitter" Style="{StaticResource buttonStyle}" Background="{DynamicResource SectionButtonGradientBrush}" Height="5" 
                                        Cursor="SizeNS"  
                                        Visibility="{Binding IsButtonSplitterVisible, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource visibleConverter}}"
                                        ClickMode="Press" Command="local:OutlookBar.StartDraggingCommand"
                                        BorderThickness="0,1,0,0">
                                        <Button.Content>
                                            <Canvas Height="5" Width="24" HorizontalAlignment="Center" >
                                                <Path Stroke="{DynamicResource ImageBrush}" Fill="Transparent" Data="M0,1 L0,0 1,0" Canvas.Left="4" Canvas.Top="2"/>
                                                <Path Stroke="White" Fill="Transparent" Data="M2,1 L2,3 1,3" Canvas.Left="4" Canvas.Top="2" />

                                                <Path Stroke="{DynamicResource ImageBrush}" Fill="Transparent" Data="M0,1 L0,0 1,0" Canvas.Left="8" Canvas.Top="2"/>
                                                <Path Stroke="White" Fill="Transparent" Data="M2,1 L2,3 1,3" Canvas.Left="8" Canvas.Top="2" />

                                                <Path Stroke="{DynamicResource ImageBrush}" Fill="Transparent" Data="M0,1 L0,0 1,0" Canvas.Left="12" Canvas.Top="2"/>
                                                <Path Stroke="White" Fill="Transparent" Data="M2,1 L2,3 1,3" Canvas.Left="12" Canvas.Top="2" />

                                                <Path Stroke="{DynamicResource ImageBrush}" Fill="Transparent" Data="M0,1 L0,0 1,0" Canvas.Left="16" Canvas.Top="2"/>
                                                <Path Stroke="White" Fill="Transparent" Data="M2,1 L2,3 1,3" Canvas.Left="16" Canvas.Top="2" />

                                                <Path Stroke="{DynamicResource ImageBrush}" Fill="Transparent" Data="M0,1 L0,0 1,0" Canvas.Left="20" Canvas.Top="2"/>
                                                <Path Stroke="White" Fill="Transparent" Data="M2,1 L2,3 1,3" Canvas.Left="20" Canvas.Top="2" />
                                            </Canvas>
                                        </Button.Content>
                                    </Button>
                                    <ItemsControl ItemsSource="{TemplateBinding MaximizedSections}" Focusable="False"/>
                                    <Border Height="{TemplateBinding ButtonHeight}" x:Name="PART_MinimizedContainer"
                                            Background="{DynamicResource SectionButtonGradientBrush}" 
                                            BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <ItemsControl x:Name="minimizedButtons" ItemsSource="{TemplateBinding MinimizedSections}" ClipToBounds="True"  Focusable="False">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <ToggleButton Style="{StaticResource buttonInSection}" Width="18" IsChecked="{Binding IsOverflowVisible, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" >
                                                <ToggleButton.Content>
                                                    <Path VerticalAlignment="Center" HorizontalAlignment="Center"
                                                       Fill="{DynamicResource ImageBrush}" 
                                                      Stroke="White" Data="M2,4 L5,7 8,4"/>
                                                </ToggleButton.Content>
                                                <ToggleButton.ContextMenu>
                                                    <ContextMenu IsOpen="{Binding IsOverflowVisible, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                              ItemsSource="{TemplateBinding OverflowMenuItems}">
                                                    </ContextMenu>
                                                </ToggleButton.ContextMenu>
                                            </ToggleButton>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                                <Grid>
                                    <ContentPresenter x:Name="content" Focusable="False" Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SectionContent}"/>
                                    <DockPanel x:Name="optionButtons" Visibility="Collapsed" Focusable="False"
                                       Background="{DynamicResource LightBackgroundBrush}" >
                                        <ItemsControl DockPanel.Dock="Bottom" ItemsSource="{TemplateBinding OptionButtons}" Focusable="False"/>
                                        <ToggleButton Content="{TemplateBinding NavigationPaneText}" ClickMode="Release"
                                                      IsChecked="{Binding IsPopupVisible,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" 
                                                      TextBlock.FontSize="14" BorderThickness="0"/>
                                        <DockPanel.Resources>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource verticalButtonStyle}" />
                                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource verticalToggleButtonStyle}" />
                                        </DockPanel.Resources>
                                    </DockPanel>
                                    <Popup x:Name="PART_Popup" 
                                       IsOpen="{Binding IsPopupVisible,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"                                       
                                       Placement="Right" PopupAnimation="Fade"  AllowsTransparency="True"  StaysOpen="False">
                                        <Popup.Child>
                                            <Border Background="Transparent">
                                                <Border Margin="0,0,6,6" Background="{DynamicResource LightBackgroundBrush}"
                                                        BorderBrush="{DynamicResource BorderBrush}" 
                                                        BorderThickness="1"  >
                                                    <Border Background="{DynamicResource LightBackgroundBrush}"
                                                        BorderBrush="{DynamicResource BorderBrush}" 
                                                        BorderThickness="1"  MinWidth="200" Margin="4"  Width="{TemplateBinding PopupWidth}">
                                                        <ContentPresenter Focusable="False" Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SectionContent}" Margin="0">
                                                        </ContentPresenter>
                                                    </Border>
                                                    <Border.Effect>
                                                        <DropShadowEffect BlurRadius="4" Color="Black"  Opacity="0.4" ShadowDepth="5"/>
                                                    </Border.Effect>
                                                </Border>
                                            </Border>
                                        </Popup.Child>
                                    </Popup>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMaximized" Value="True"/>
                                <Condition Property="Dock" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="expandPath" Property="Data" Value="M3,0 L0,3 3,6 M6,0 L3,3 6,6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMaximized" Value="False"/>
                                <Condition Property="Dock" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="expandPath" Property="Data" Value="M3,0 L0,3 3,6 M6,0 L3,3 6,6"/>
                        </MultiTrigger>
                        <Trigger Property="IsMaximized" Value="False">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="content" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="headerText" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="optionButtons" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="minimizedButtons" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="closeButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Dock" Value="Right">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                            <Setter TargetName="resizeButton" Property="DockPanel.Dock" Value="Left"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type local:OdcExpander}" BasedOn="{StaticResource odcHeader}"/>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:OutlookBar}"  BasedOn="{StaticResource OutlookBar}"/>

    <Style TargetType="{x:Type local:OutlookSection}">
        <Setter Property="Background" Value="{DynamicResource SectionButtonGradientBrush}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:OutlookSection}" >
                    <ToggleButton Background="{TemplateBinding Background}"  x:Name="button"
                                  TextBlock.FontWeight="Bold"                                   
                                  Focusable="True" 
                                  Foreground="{TemplateBinding Foreground}"
                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsSelected}"
                                  BorderThickness="0,1,0,0"
                                  Height="{TemplateBinding Height}"
                                  ClickMode="Press" Style="{StaticResource buttonInSection}" >
                        <ToggleButton.Content>
                            <DockPanel Focusable="False">
                                <Image Source="{TemplateBinding Image}" Focusable="False" DockPanel.Dock="Left" Margin="4,0,4,0" VerticalAlignment="Center" Stretch="None" Width="24" MaxHeight="24"/>
                                <ContentPresenter x:Name="content" Focusable="False" Content="{TemplateBinding Header}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,0,4,0"/>
                            </DockPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMaximized" Value="False">
                            <Setter TargetName="content" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="button" Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>